{"version":3,"sources":["logo.svg","assets/avatar.png","Components/Home/Home.js","Components/Particles/Particles.js","Components/Header/SideDrawer.js","Components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","width","spacing","height","margin","title","color","subtitle","textTransform","typedContainer","position","top","left","transform","textAlign","zIndex","Home","classes","Box","className","Grid","container","justify","Avatar","src","alt","Typography","variant","strings","typeSpeed","backSpeed","loop","particlesCanvas","opacity","Particles","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity_min","list","linkText","textDecoration","navbarDisplayFlex","display","justifyContent","navDisplayFlex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,mECAA,MAA0B,mC,OCSnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,MAAOF,EAAMG,QAAQ,IACrBC,OAAQJ,EAAMG,QAAQ,IACtBE,OAAQL,EAAMG,QAAQ,IAExBG,MAAO,CACLC,MAAO,UAETC,SAAU,CACRD,MAAO,MACPE,cAAe,aAEjBC,eAAgB,CACdC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXZ,MAAO,QACPa,UAAW,SACXC,OAAQ,OAmCGC,EA/BF,WACX,IAAMC,EAAUpB,IAEhB,OACE,eAACqB,EAAA,EAAD,CAAKC,UAAWF,EAAQR,eAAxB,UACE,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACC,EAAA,EAAD,CAAQJ,UAAWF,EAAQjB,OAAQwB,IAAKxB,EAAQyB,IAAI,sBAEtD,cAACC,EAAA,EAAD,CAAYP,UAAWF,EAAQZ,MAAOsB,QAAQ,KAA9C,SACE,cAAC,IAAD,CAAOC,QAAS,CAAC,mBAAoBC,UAAW,OAGlD,cAACH,EAAA,EAAD,CAAYP,UAAWF,EAAQV,SAAUoB,QAAQ,KAAjD,SACE,cAAC,IAAD,CACEC,QAAS,CACP,qBACA,oBACA,WACA,aACA,MACA,cAEFC,UAAW,GACXC,UAAW,GACXC,MAAI,U,SCrDRlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiC,gBAAiB,CACftB,SAAU,QACVuB,QAAS,WAoDEC,EAhDG,WAChB,IAAMjB,EAAUpB,IAEhB,OACE,cAAC,YAAD,CACEsC,gBAAiBlB,EAAQe,gBACzBI,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLC,KAAM,SACNC,OAAQ,CACN5C,MAAO,EACPK,MAAO,WAGXwC,KAAM,CACJP,MAAO,EACPQ,QAAQ,EACRC,KAAM,CACJP,QAAQ,EACRQ,MAAO,EACPC,SAAU,EACVC,MAAM,IAGVlB,QAAS,CACPM,MAAO,GACPQ,QAAQ,EACRC,KAAM,CACJP,QAAQ,EACRQ,MAAO,EACPG,YAAa,GACbD,MAAM,S,2FCtCFrD,YAAW,CAC3BuD,KAAM,CACJpD,MAAO,KAETqD,SAAU,CACRC,eAAe,OACf/C,cAAc,YACdF,MAAM,WCJQR,YAAW,CAC3B0D,kBAAmB,CACjBC,QAAQ,OACRC,eAAe,iBAEjBC,eAAgB,CACdF,QAAQ,OACRC,eAAe,iBAEjBJ,SAAU,CACRC,eAAe,OACf/C,cAAc,YACdF,MAAM,WCVKsD,MAXf,WACE,OACE,qBAAKzC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCCO0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae7731a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/avatar.13818d0f.png\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typed from \"react-typed\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport avatar from \"../../assets/avatar.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    width: theme.spacing(15),\n    height: theme.spacing(15),\n    margin: theme.spacing(1),\n  },\n  title: {\n    color: \"tomato\",\n  },\n  subtitle: {\n    color: \"tan\",\n    textTransform: \"uppercase\",\n  },\n  typedContainer: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    width: \"100vw\",\n    textAlign: \"center\",\n    zIndex: 1,\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.typedContainer}>\n      <Grid container justify=\"center\">\n        <Avatar className={classes.avatar} src={avatar} alt=\"Neethu Varghese\" />\n      </Grid>\n      <Typography className={classes.title} variant=\"h4\">\n        <Typed strings={[\"Neethu Varghese\"]} typeSpeed={40} />\n      </Typography>\n\n      <Typography className={classes.subtitle} variant=\"h5\">\n        <Typed\n          strings={[\n            \"Frontend Developer\",\n            \"Backend Developer\",\n            \"React Js\",\n            \"Vanilla Js\",\n            \"PHP\",\n            \"Word Press\",\n          ]}\n          typeSpeed={40}\n          backSpeed={50}\n          loop\n        />\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Particles as ReactParticles } from \"react-particles-js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  particlesCanvas: {\n    position: \"fixed\",\n    opacity: \"0.3\"\n  },\n}));\n\nconst Particles = () => {\n  const classes = useStyles();\n\n  return (\n    <ReactParticles\n      canvasClassName={classes.particlesCanvas}\n      params={{\n        particles: {\n          number: {\n            value: 45,\n            density: {\n              enable: true,\n              value_area: 800,\n            },\n          },\n          shape: {\n            type: \"circle\",\n            stroke: {\n              width: 1,\n              color: \"tomato\",\n            },\n          },\n          size: {\n            value: 8,\n            random: true,\n            anim: {\n              enable: false,\n              speed: 6,\n              size_min: 0,\n              sync: true,\n            },\n          },\n          opacity: {\n            value: 0.5,\n            random: true,\n            anim: {\n              enable: true,\n              speed: 1,\n              opacity_min: 0.1,\n              sync: false,\n            },\n          },\n        },\n      }}\n    />\n  );\n};\n\nexport default Particles;\n","import {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Menu } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `black`,\n  },\n});\n\nconst SideDrawer = ({ navLinks }) => {\n  const classes = useStyles();\n  const [state, setState] = useState({ right: false });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ [anchor]: open });\n  };\n\n  const sideDrawerList = (anchor) => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List component=\"nav\">\n        {navLinks.map(({ title, path }) => (\n          <a href={path} key={title} className={classes.linkText}>\n            <ListItem button>\n              <ListItemText primary={title} />\n            </ListItem>\n          </a>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <React.Fragment>\n      <IconButton\n        edge=\"start\"\n        aria-label=\"menu\"\n        onClick={toggleDrawer(\"right\", true)}\n      >\n        <Menu fontSize=\"large\" style={{ color: `white` }} />\n      </IconButton>\n\n      <Drawer\n        anchor=\"right\"\n        open={state.right}\n        onOpen={toggleDrawer(\"right\", true)}\n        onClose={toggleDrawer(\"right\", false)}\n      >\n        {sideDrawerList(\"right\")}\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default SideDrawer;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Container,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Hidden,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport SideDrawer from \"./SideDrawer\";\n\nconst useStyles = makeStyles({\n  navbarDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n  navDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`,\n  },\n});\n\nconst navLinks = [\n  { title: `about us`, path: `/about-us` },\n  { title: `product`, path: `/product` },\n  { title: `blog`, path: `/blog` },\n  { title: `contact`, path: `/contact` },\n  { title: `faq`, path: `/faq` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Container maxWidth=\"md\" className={classes.navbarDisplayFlex}>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\n            <Home fontSize=\"large\" />\n          </IconButton>\n          <Hidden smDown>\n            <List\n              component=\"nav\"\n              aria-labelledby=\"main navigation\"\n              className={classes.navDisplayFlex}\n            >\n              {navLinks.map(({ title, path }) => (\n                <a href={path} key={title} className={classes.linkText}>\n                  <ListItem button>\n                    <ListItemText primary={title} />\n                  </ListItem>\n                </a>\n              ))}\n            </List>\n          </Hidden>\n          <Hidden mdUp>\n            <SideDrawer navLinks={navLinks} />\n          </Hidden>\n        </Container>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Components/Home/Home\";\nimport Particles from \"./Components/Particles/Particles\";\nimport Header from \"./Components/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home />\n        <Particles />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}