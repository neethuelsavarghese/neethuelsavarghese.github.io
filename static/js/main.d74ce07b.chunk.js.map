{"version":3,"sources":["logo.svg","assets/avatar.png","Components/Home/Home.js","Components/Particles/Particles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","avatar","width","spacing","height","margin","boxclass","position","top","left","textAlign","transform","zIndex","title","color","subtitle","textTransform","Home","classes","Box","className","Grid","container","justify","Avatar","src","alt","Typography","variant","strings","typeSpeed","backSpeed","loop","particlesCanvas","opacity","Particles","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity_min","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,+ECAA,MAA0B,mCCSnCA,EAAUC,aAAW,SAACC,GAAD,MAAU,CAErCC,OAAO,CAELC,MAAMF,EAAMG,QAAQ,IACpBC,OAAOJ,EAAMG,QAAQ,IACrBE,OAAOL,EAAMG,QAAQ,IAIvBG,SAAS,CAEPC,SAAS,WACTC,IAAI,MACJC,KAAK,MACLP,MAAM,QACNQ,UAAU,SACVC,UAAU,uBACVC,OAAO,GAGTC,MAAM,CACJC,MAAM,UAGRC,SAAS,CACTD,MAAM,MACNE,cAAc,iBAsCCC,EAjCF,WAEX,IAAMC,EAAQpB,IAEd,OAEE,eAACqB,EAAA,EAAD,CAAKC,UAAWF,EAAQZ,SAAxB,UACE,cAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACC,EAAA,EAAD,CAAQJ,UAAWF,EAAQjB,OAAQwB,IAAKxB,EAAQyB,IAAI,sBAEtD,cAACC,EAAA,EAAD,CAAYP,UAAWF,EAAQL,MAAOe,QAAQ,KAA9C,SACE,cAAC,IAAD,CAAOC,QAAS,CAAC,mBAAoBC,UAAW,OAGlD,cAACH,EAAA,EAAD,CAAYP,UAAWF,EAAQH,SAAUa,QAAQ,KAAjD,SACE,cAAC,IAAD,CACEC,QAAS,CACP,qBACA,oBACA,WACA,aACA,MACA,cAEFC,UAAW,GACXC,UAAW,GACXC,MAAI,U,QC/DRlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiC,gBAAiB,CACf1B,SAAU,QACV2B,QAAS,WAoDEC,EAhDG,WAChB,IAAMjB,EAAUpB,IAEhB,OACE,cAAC,YAAD,CACEsC,gBAAiBlB,EAAQe,gBACzBI,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLC,KAAM,SACNC,OAAQ,CACN5C,MAAO,EACPY,MAAO,WAGXiC,KAAM,CACJP,MAAO,EACPQ,QAAQ,EACRC,KAAM,CACJP,QAAQ,EACRQ,MAAO,EACPC,SAAU,EACVC,MAAM,IAGVlB,QAAS,CACPM,MAAO,GACPQ,QAAQ,EACRC,KAAM,CACJP,QAAQ,EACRQ,MAAO,EACPG,YAAa,GACbD,MAAM,SChCLE,MAXf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAOmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d74ce07b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/avatar.a6f921ee.png\";","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typed from \"react-typed\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport avatar from \"../../assets/avatar.png\";\r\n\r\nconst useStyles=makeStyles((theme)=>({ \r\n\r\navatar:{\r\n\r\n  width:theme.spacing(15),\r\n  height:theme.spacing(15),\r\n  margin:theme.spacing(1),\r\n  \r\n},\r\n\r\nboxclass:{\r\n\r\n  position:\"absolute\",\r\n  top:\"50%\",\r\n  left:\"50%\",\r\n  width:\"100vw\",\r\n  textAlign:\"center\",\r\n  transform:\"translate(-50%,-50%)\",\r\n  zIndex:1,\r\n},\r\n\r\ntitle:{\r\n  color:\"tomato\",\r\n},\r\n\r\nsubtitle:{\r\ncolor:\"tan\",\r\ntextTransform:\"uppercase\",\r\n\r\n},\r\n}))\r\n\r\nconst Home = () => \r\n{\r\n  const classes=useStyles();\r\n  \r\n  return(\r\n\r\n    <Box className={classes.boxclass}>\r\n      <Grid container justify=\"center\">\r\n        <Avatar className={classes.avatar} src={avatar} alt=\"Neethu Varghese\" />\r\n      </Grid>\r\n      <Typography className={classes.title} variant=\"h4\">\r\n        <Typed strings={[\"Neethu Varghese\"]} typeSpeed={40} />\r\n      </Typography>\r\n\r\n      <Typography className={classes.subtitle} variant=\"h5\">\r\n        <Typed\r\n          strings={[\r\n            \"Frontend Developer\",\r\n            \"Backend Developer\",\r\n            \"React Js\",\r\n            \"Vanilla Js\",\r\n            \"PHP\",\r\n            \"Word Press\",\r\n          ]}\r\n          typeSpeed={40}\r\n          backSpeed={50}\r\n          loop\r\n        />\r\n      </Typography>\r\n    </Box>\r\n\r\n  )\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport { Particles as ReactParticles } from \"react-particles-js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  particlesCanvas: {\r\n    position: \"fixed\",\r\n    opacity: \"0.3\"\r\n  },\r\n}));\r\n\r\nconst Particles = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ReactParticles\r\n      canvasClassName={classes.particlesCanvas}\r\n      params={{\r\n        particles: {\r\n          number: {\r\n            value: 45,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800,\r\n            },\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n            stroke: {\r\n              width: 1,\r\n              color: \"tomato\",\r\n            },\r\n          },\r\n          size: {\r\n            value: 8,\r\n            random: true,\r\n            anim: {\r\n              enable: false,\r\n              speed: 6,\r\n              size_min: 0,\r\n              sync: true,\r\n            },\r\n          },\r\n          opacity: {\r\n            value: 0.5,\r\n            random: true,\r\n            anim: {\r\n              enable: true,\r\n              speed: 1,\r\n              opacity_min: 0.1,\r\n              sync: false,\r\n            },\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Particles;","import logo from './logo.svg';\nimport './App.css';\n\nimport Aboutme from './Components/About/Aboutme';\nimport Home from './Components/Home/Home';\nimport Particles from './Components/Particles/Particles';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home/>\n        <Particles/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}